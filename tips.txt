* /etc/resolve.conf is now automatically generated by systemd.

edit "/etc/systemd/resolved.conf" instead:

sudo gedit /etc/systemd/resolved.conf

sudo systemctl restart systemd-resolved


* ansible parallelism

ansible-playbook <play-book> -f 20 


* fix the vi backspace problem 

run the following cmd on terminal before entering vi: stty sane


* run ansible playbook

ansible-playbook playbooks/get-docker-images.yml -f 100 --ssh-extra-args="-i ~/.ssh/id_rsa" --vault-password-file ~/.ssh/.ansible_vault.txt


* commit a new docker version

you don't have to commit to a new tag ... committing directly onto an existing tag

E.g.: docker commit ee5e5c3da24c image_name:existing_tag


* hello-world test app in c:

cat <<EOF >test.c 

#include <stdio.h>
int main() {
   // printf() displays the string inside quotation
   printf("Hello, World!");
   return 0;
}
EOF

* old ilo access - java8:

C:\Users\omalichi\Downloads\javaws.exe "C:\Users\omalichi\Downloads\launch.jnlp"


* aliases in WINDOWS (!):

Create a .bat or .cmd file with your DOSKEY commands.

Run regedit and go to HKEY_CURRENT_USER\Software\Microsoft\Command Processor

Add String Value entry with the name AutoRun and the full path of your .bat/.cmd file.

For example, %USERPROFILE%\alias.cmd, replacing the initial segment of the path with %USERPROFILE% is useful for syncing among multiple machines.

This way, every time cmd is run, the aliases are loaded.

For Windows 10 or Windows 11, add the entry to HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor instead.

(For Windows 11, also note that by default the "Terminal App" points to PowerShell. Search "cmd" for command prompt.)

For completeness, here is a template to illustrate the kind of aliases one may find useful.

@echo off

:: Temporary system path at cmd startup

set PATH=%PATH%;"C:\Program Files\Sublime Text 2\"

:: Add to path by command

DOSKEY add_python26=set PATH=%PATH%;"C:\Python26\"
DOSKEY add_python33=set PATH=%PATH%;"C:\Python33\"

:: Commands

DOSKEY ls=dir /B $*
DOSKEY sublime=sublime_text $*  
    ::sublime_text.exe is name of the executable. By adding a temporary entry to system path, we don't have to write the whole directory anymore.
DOSKEY gsp="C:\Program Files (x86)\Sketchpad5\GSP505en.exe"
DOSKEY alias=notepad %USERPROFILE%\Dropbox\alias.cmd

:: Common directories

DOSKEY dropbox=cd "%USERPROFILE%\Dropbox\$*"
DOSKEY research=cd %USERPROFILE%\Dropbox\Research\


* list my sudo privileges (password required):

sudo -l 


* send input to a program that waits for it and doesn't have interactive mode (e.g. runas / telnet)

runas /user:test cmd 0<pwd.txt


* Shutdown WSL using 'wsl --shutdown' if it fails with the following error:

C:\windows\system32>bash
The Windows Subsystem for Linux instance has terminated.

C:\windows\system32>wsl --shutdown

C:\windows\system32>bash
Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)


* mount a folder on a Windows machine:

docker run -it -v c:/Temp:c:/inner-dir 0ab7944768e3 cmd


* mount a single file in a docker container:

r --user malichi -it -v /tmp/krb5cc_malichi:/tmp/krb5cc_malichi ubuntu


* Connect the UI to a docker image:

cp ~/.Xauthority /tmp
chmod 777 /tmp/.Xauthority
docker container run -d -it --memory=2g --rm --env HOME=/tmp -e DISPLAY="$DISPLAY" --privileged --network=host -v /tmp:/tmp <img-to-run>


* Connect the UI to an SSH session:

ssh -X <target-machine> -t /usr/bin/env DISPLAY=$DISPLAY PATH="$PATH":/usr/bin:/binÂ /bin/bash





